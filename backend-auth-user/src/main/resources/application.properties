#datasource settings
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.default_schema=${COOKBOOK_DATABASE_SCHEMA}

spring.datasource.url=${COOKBOOK_POSTGRES_JDBC_URL}
spring.datasource.username=${COOKBOOK_POSTGRES_USERNAME}
spring.datasource.password=${COOKBOOK_POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# oauth2 datasource settings
oauth2.datasource.url=${OAUTH2_POSTGRES_JDBC_URL}
oauth2.datasource.username=${OAUTH2_POSTGRES_USERNAME}
oauth2.datasource.password=${OAUTH2_POSTGRES_PASSWORD}
oauth2.datasource.hikari.schema=${OAUTH2_DATABASE_SCHEMA}
oauth2.datasource.driver-class-name=org.postgresql.Driver

# oauth2 token settings
oauth2.access.token.ttl.hours=${ACCESS_TOKEN_TTL_HOURS:#{24}}
oauth2.refresh.token.ttl.hours=${REFRESH_TOKEN_TTL_HOURS:#{168}}

# security providers for autoconfiguration (client repository)
spring.security.oauth2.client.registration.google-idp.provider=google
spring.security.oauth2.client.registration.google-idp.client-id=${GOOGLE_CLIENT_ID:google-client-id}
spring.security.oauth2.client.registration.google-idp.client-secret=${GOOGLE_CLIENT_SECRET:google-client-secret}
spring.security.oauth2.client.registration.google-idp.scope=openid, https://www.googleapis.com/auth/userinfo.profile, https://www.googleapis.com/auth/userinfo.email
spring.security.oauth2.client.registration.google-idp.client-name=Sign in with Google
spring.security.oauth2.client.provider.google.user-name-attribute=email

# actuator management
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
management.endpoint.health.group.custom.show-details=when-authorized
management.endpoint.health.group.custom.roles=admin